<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ppumang&apos;s dev blog</title>
    <description>blockchain, web, machine learning</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 05 Oct 2022 17:11:12 +0900</pubDate>
    <lastBuildDate>Wed, 05 Oct 2022 17:11:12 +0900</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>So how are bicoin wallets made?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;For simplicity, only Type 2 Hierarchical Deterministic Wallets are considered&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;In Bitcoin, &lt;strong&gt;wallet&lt;/strong&gt; is a software that manages &lt;strong&gt;keys&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;A user needs private key and public key to use bitcoin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/t2_deterministic.png&quot; title=&quot;px(픽셀) 크기 설정&quot; alt=&quot;deterministic wallets&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A seed generates a master private key, and each private key can generate multiple child private key&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/pvkey_pubkey_addr.png&quot; title=&quot;px(픽셀) 크기 설정&quot; alt=&quot;private key to address&quot; /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First, a private key is generated&lt;/li&gt;
  &lt;li&gt;private key&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 05 Oct 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/So-how-are-bicoin-wallets-made/</link>
        <guid isPermaLink="true">http://localhost:4000/So-how-are-bicoin-wallets-made/</guid>
        
        
      </item>
    
      <item>
        <title>So how does bitcoin network work?</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;for simplicity, this article only deals with full node, P2PKH&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Bitcoin network is maintained by nodes.&lt;/li&gt;
  &lt;li&gt;Just as the internet runs on http protocol, bitcoin nodes interact with each other on bitcoin protocol&lt;/li&gt;
  &lt;li&gt;Nodes are computers that are running bitcoin software&lt;/li&gt;
  &lt;li&gt;Each node( full node ) saves a copy of bitcoin transaction data&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“coin”&lt;/strong&gt; or &lt;strong&gt;“balance”&lt;/strong&gt; does not exist in bitcoin&lt;/li&gt;
  &lt;li&gt;Instead, bitcoin saves &lt;strong&gt;transactions&lt;/strong&gt;. With transaction data, bitcoin software can calculate &lt;strong&gt;UTXO&lt;/strong&gt;( Unspent Transaction Output ) to prove how much bitcoins an address owns&lt;/li&gt;
  &lt;li&gt;Each UTXO can only be spent by a specific user&lt;/li&gt;
  &lt;li&gt;Transfering a bitcoin from one address to another means to eventually generate a new transaction
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// how a transaction data looks like&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;locktime&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;vin&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;txid&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;7957a35fe64f80d234d76d83a2a8f1a0d8149a41d81de548f0a65a8a999f6f18&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;vout&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scriptSig&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;3045022100884d142d86652a3f47ba4746ec719bbfbd040a570b1deccbb6498c75c4ae24cb02204b9f039ff08df09cbe9f6addac960298cad530a863ea8f53982c09db8f6e3813[ALL] 0484ecc0d46f1918b30928fa0e4ed99f16a0fb4fde0735e7ade8416ab9fe423cc5412336376789d172787ec3457eee41c04f4938de5cc17b4a10fa336a8d752adf&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sequence&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;vout&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scriptPubKey&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;OP_DUP OP_HASH160 ab68025513c3dbd2f7b92a94e0581f5d50f654e7 OP_EQUALVERIFY OP_CHECKSIG&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scriptPubKey&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;OP_DUP OP_HASH160 7f9b1a7fb68d60c536c2fd8aeaa53a8f3cc025a8 OP_EQUALVERIFY OP_CHECKSIG&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/utxo.png&quot; title=&quot;px(픽셀) 크기 설정&quot; alt=&quot;gaori&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This is a brief summary of what happens when person X transfers 300 bitcoins to person Y.
    &lt;ol&gt;
      &lt;li&gt;Search through every transactions that exists ( since the genesis block )&lt;/li&gt;
      &lt;li&gt;For each transaction, generate signature with X’s private key and the transaction data. Combine this signature and X’s public key to generate an unlocking script( scriptSig )&lt;/li&gt;
      &lt;li&gt;Combine this unlocking script( scriptSig ) with the transaction’s output’s locking script( scriptPubKey ) to prove that X can spend that transaction’s output&lt;/li&gt;
      &lt;li&gt;X should also prove that the output is unspent, iterating through every blocks&lt;/li&gt;
      &lt;li&gt;If proven that X can spend the transaction’s output and the output is unspent, that output is added to X’s UTXO pool&lt;/li&gt;
      &lt;li&gt;After iterating through every transactions, pick UTXOs from X’s UTXO pool to use as inputs of a new transaction. The sum of outputs’ value should exceed the amount to transfer, which in this case, is 300&lt;/li&gt;
      &lt;li&gt;Let’s say that X picked a input from a transaction that has value 400 as its output&lt;/li&gt;
      &lt;li&gt;X need to transfer 300 bitcoins to Y, so one output has value 300, which can only be spent by Y later, and another output( change ) has value 100, which can only be spent by X later ( transaction fee is not considered for simplicity )&lt;/li&gt;
      &lt;li&gt;Now that transaction data is made, it is broadcasted to other nodes through bitcoin protocol&lt;/li&gt;
      &lt;li&gt;When mining nodes receive this transaction data, they add the data to their mempool( transaction pool )&lt;/li&gt;
      &lt;li&gt;When a mining node includes the transaction to their candidate block’s transactions list and wins the competition, the transaction is now recorded in bitcoin chain forever&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;This process seems inefficient with all the iterations&lt;/li&gt;
  &lt;li&gt;This inefficiency is a result of trade-off with decentralization, but in some level, this inefficiency can be reduced by using caches and data structures, which we will cover in future articles&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 04 Oct 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/So-how-does-bitcoin-network-work/</link>
        <guid isPermaLink="true">http://localhost:4000/So-how-does-bitcoin-network-work/</guid>
        
        
      </item>
    
      <item>
        <title>Markdown</title>
        <description>&lt;h1 id=&quot;this-is-an-h1&quot;&gt;This is an H1&lt;/h1&gt;

&lt;h2 id=&quot;this-is-an-h2&quot;&gt;This is an H2&lt;/h2&gt;

&lt;h1 id=&quot;this-is-a-h1&quot;&gt;This is a H1&lt;/h1&gt;
&lt;h2 id=&quot;this-is-a-h2&quot;&gt;This is a H2&lt;/h2&gt;
&lt;h3 id=&quot;this-is-a-h3&quot;&gt;This is a H3&lt;/h3&gt;
&lt;h4 id=&quot;this-is-a-h4&quot;&gt;This is a H4&lt;/h4&gt;
&lt;h5 id=&quot;this-is-a-h5&quot;&gt;This is a H5&lt;/h5&gt;
&lt;h6 id=&quot;this-is-a-h6&quot;&gt;This is a H6&lt;/h6&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a first blockqute.
	&amp;gt; This is a second blockqute.
	&amp;gt;	&amp;gt; This is a third blockqute.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;첫번째&lt;/li&gt;
  &lt;li&gt;두번째&lt;/li&gt;
  &lt;li&gt;세번째&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;빨강
    &lt;ul&gt;
      &lt;li&gt;녹색
        &lt;ul&gt;
          &lt;li&gt;파랑&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;빨강
    &lt;ul&gt;
      &lt;li&gt;녹색
        &lt;ul&gt;
          &lt;li&gt;파랑&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;빨강
    &lt;ul&gt;
      &lt;li&gt;녹색
        &lt;ul&gt;
          &lt;li&gt;파랑&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1단계
    &lt;ul&gt;
      &lt;li&gt;2단계
        &lt;ul&gt;
          &lt;li&gt;3단계
            &lt;ul&gt;
              &lt;li&gt;4단계&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;hello
    &lt;ul&gt;
      &lt;li&gt;hello
        &lt;ul&gt;
          &lt;li&gt;hello&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a normal paragraph:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is a code block.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;end code block.&lt;/p&gt;

&lt;pre&gt;
&lt;code&gt;
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println(&quot;Hello, Honeymon&quot;);
  }

}
&lt;/code&gt;
&lt;/pre&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println(&quot;Hello, Honeymon&quot;);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BootSpringBootApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, Honeymon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;URL&quot; title=&quot;Optional Title here&quot;&gt;link keyword&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Link: &lt;a href=&quot;https://google.com&quot; title=&quot;Go google&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;외부링크: &lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;이메일링크: &lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double underscores&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;cancelline&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/gaori.png&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/gaori.png&quot; height=&quot;300px&quot; title=&quot;px(픽셀) 크기 설정&quot; alt=&quot;gaori&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 01 Jan 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/markdown/</link>
        <guid isPermaLink="true">http://localhost:4000/markdown/</guid>
        
        
      </item>
    
  </channel>
</rss>